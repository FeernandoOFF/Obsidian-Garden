<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>core-topics/tech/fundamentals on</title><link>https://garden.feernandooff.com/tags/core-topics/tech/fundamentals/</link><description>Recent content in core-topics/tech/fundamentals on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://garden.feernandooff.com/tags/core-topics/tech/fundamentals/index.xml" rel="self" type="application/rss+xml"/><item><title>API</title><link>https://garden.feernandooff.com/Zettelkasten/API/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/API/</guid><description>API It stands for **Application Programming Interface **
Types of API&amp;rsquo;s
Create Software Such as DOCS Interact with an external software References</description></item><item><title>Design Pattern</title><link>https://garden.feernandooff.com/Zettelkasten/Design-Pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/Design-Pattern/</guid><description>What is a Design Pattern? Is a proven solution to a common problem
What is the problem? Software References</description></item><item><title>Http</title><link>https://garden.feernandooff.com/Zettelkasten/Http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/Http/</guid><description>HTTP Http stands for (Hypertext transfer [[protocol]]) which is the language for the [[web]]
How HTTP works Request response model You have to request information to the [[server]] in order to get a response TIME &amp;laquo; Data It takes more to response but you want to make sure that the page is complete It uses [[TCP]] protocol for the transmission and stability Simple HTTP request/ response You can create a server with you preferred programming language You can send a request from different clients such as: curl NetCat 1 2 3 4 GET / HTTP 1.</description></item><item><title>MVC</title><link>https://garden.feernandooff.com/Zettelkasten/MVC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/MVC/</guid><description>MVC MVC is an acronym for Model, View and Controller which is a Design Pattern that allows you to create [[Scalable apps]], for this reason Big companies like Apple uses it.</description></item><item><title>protocol</title><link>https://garden.feernandooff.com/Zettelkasten/protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/protocol/</guid><description>Protocol A protocol is a way for machines for communicate with each other. You can think of them as a language what everyone agrees in order to understand what the other wants to say</description></item><item><title>Singleton</title><link>https://garden.feernandooff.com/Zettelkasten/Singleton/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/Singleton/</guid><description>[[Zettelkasten/Design Pattern]]
Singleton The singleton pattern is part of the [[SOLID]] standard and it means that only one instance of a class should be created and used across the app</description></item><item><title>TCP</title><link>https://garden.feernandooff.com/Zettelkasten/TCP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/TCP/</guid><description>TCP TCP is a protocol
Characteristics Ensures the integrity of the packages References</description></item><item><title>UDP</title><link>https://garden.feernandooff.com/Zettelkasten/UDP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://garden.feernandooff.com/Zettelkasten/UDP/</guid><description>UDP UDP is a protocol that &amp;ldquo;one way model&amp;rdquo;
Characteristics does not validate the integrity of the packages References</description></item></channel></rss>